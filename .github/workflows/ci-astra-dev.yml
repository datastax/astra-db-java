name: AstraDev

on:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  workflow_dispatch:

jobs:
  BUILD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn install -Dmaven.test.skip=true

  AWS_US_WEST2_CORE:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev.*Test

  GCP_EUROPE_WEST4:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Run test for DEV
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev.*Test

#  GCP_US_CENTRAL1:
#    needs: BUILD
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'adopt'
#          java-version: 11
#          cache: 'maven'
#
#      - name: Run test for DEV
#        env:
#          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
#          ASTRA_CLOUD_PROVIDER_DEV: GCP
#          ASTRA_CLOUD_REGION_DEV: us-central1
#        run: |
#          cd astra-db-java
#          mvn test -Dtest=com.datastax.astra.test.integration.dev.*Test

  AWS_OPEN_AI:
    needs: AWS_US_WEST2_CORE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: openai
          EMBEDDING_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  AWS_AZURE_OPEN_AI:
    needs: AWS_US_WEST2_CORE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: azureOpenAI
          EMBEDDING_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  AWS_HUGGING_FACE:
    needs: AWS_AZURE_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: huggingface
          EMBEDDING_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest          


  AWS_MISTRAL_AI:
    needs: AWS_AZURE_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: mistral
          EMBEDDING_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  AWS_VOYAGE_AI:
    needs: AWS_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: voyageAI
          EMBEDDING_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  AWS_UPSTAGE_AI:
    needs: AWS_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: upstageAI
          EMBEDDING_API_KEY: ${{ secrets.UPSTAGE_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  

  AWS_JINA_AI:
    needs: AWS_UPSTAGE_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: jinaAI
          EMBEDDING_API_KEY: ${{ secrets.JINA_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  

  AWS_NVIDIA:
    needs: AWS_VOYAGE_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: nvidia
          EMBEDDING_API_KEY: nvidia # required for github actions, not used
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  




  GCP_OPEN_AI:
    needs: GCP_EUROPE_WEST4
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: openai
          EMBEDDING_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  GCP_AZURE_OPEN_AI:
    needs: GCP_EUROPE_WEST4
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: AWS
          ASTRA_CLOUD_REGION_DEV: us-west-2
          EMBEDDING_PROVIDER: azureOpenAI
          EMBEDDING_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  GCP_HUGGING_FACE:
    needs: GCP_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: huggingface
          EMBEDDING_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest          

  GCP_MISTRAL_AI:
    needs: GCP_AZURE_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: mistral
          EMBEDDING_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  GCP_VOYAGE_AI:
    needs: GCP_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: voyageAI
          EMBEDDING_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  GCP_UPSTAGE_AI:
    needs: GCP_OPEN_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: upstageAI
          EMBEDDING_API_KEY: ${{ secrets.UPSTAGE_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  


  GCP_JINA_AI:
    needs: GCP_UPSTAGE_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: jinaAI
          EMBEDDING_API_KEY: ${{ secrets.JINA_API_KEY }}
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
  GCP_NVIDIA:
    needs: GCP_VOYAGE_AI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 11
          cache: 'maven'
      - name: Maven Test
        env:
          ASTRA_DB_APPLICATION_TOKEN_DEV: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN_DEV }}
          ASTRA_CLOUD_PROVIDER_DEV: GCP
          ASTRA_CLOUD_REGION_DEV: europe-west4
          EMBEDDING_PROVIDER: nvidia
          EMBEDDING_API_KEY: nvidia # required for github actions, not used
        run: |
          cd astra-db-java
          mvn test -Dtest=com.datastax.astra.test.integration.dev_vectorize.AstraDevVectorizeEmbeddingApiKeyITTest
